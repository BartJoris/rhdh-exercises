---
- name: Install gitlab namespace
  community.okd.k8s:
    name: gitlab-system
    api_version: v1
    kind: Namespace
    state: present
- name: Install gitlab operator
  community.okd.k8s:
    state: present
    src: "{{ gitlab_operator_path }}"
- name: Wait till the Object is created
  kubernetes.core.k8s_info:
    kind: CustomResourceDefinition
    api_version: apiextensions.k8s.io/v1
    wait: yes
    name: gitlabs.apps.gitlab.com
    wait_sleep: 10
    wait_timeout: 360
- name: Get basedomain
  k8s_info:
    api_version: operator.openshift.io/v1
    kind: IngressController
    name: default
    namespace: openshift-ingress-operator
  register: basedomain_json
- name: Set basedomain variable
  set_fact:
    basedomain: "{{ basedomain_json.resources[0].status.domain }}"
- name: Print basedomain
  debug:
    var: basedomain
- name: Render the template with the basedomain
  template:
    src: "{{ path_playbooks }}/install-demo/templates/gitlab.j2"
    dest: "{{ gitlab_output_file }}"
- name: Install Gitlab
  community.okd.k8s:
    state: present
    src: "{{ gitlab_output_file }}"
- name: Wait till the Object is created
  kubernetes.core.k8s_info:
    kind: GitLab
    api_version: apps.gitlab.com/v1beta1
    wait: yes
    name: gitlab
    namespace: gitlab-system
    wait_sleep: 10
    wait_timeout: 360
- name: Wait for GitLab resource to be running
  k8s_info:
    api_version: apps.gitlab.com/v1beta1
    kind: GitLab
    name: gitlab
    namespace: gitlab-system
  register: gitlab_status
  until: gitlab_status.resources[0].status.phase == "Running"
  retries: 30
  delay: 10
- name: Print GitLab status
  debug:
    msg: "GitLab status is: {{ gitlab_status.resources[0].status.phase }}"
